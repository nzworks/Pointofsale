// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using POS.Data;

#nullable disable

namespace POS.Migrations
{
    [DbContext(typeof(PosDbContext))]
    partial class PosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("POS.Models.CategoryMdl", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("category_id"));

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<string>("category_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image_path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("category_id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("POS.Models.MenuItemCategory", b =>
                {
                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItemCategories");
                });

            modelBuilder.Entity("POS.Models.MenuItems", b =>
                {
                    b.Property<int>("menuitem_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("menuitem_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("menuitem_id"));

                    b.Property<int?>("category_id")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("item_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("item_image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("item_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("item_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("menuitem_id");

                    b.HasIndex("category_id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("POS.Models.OrderItems", b =>
                {
                    b.Property<int>("order_item_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderitem_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_item_id"));

                    b.Property<int?>("menuitem_id")
                        .HasColumnType("int")
                        .HasColumnName("menuitem_id");

                    b.Property<int>("order_id")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("subtotal")
                        .HasColumnType("int");

                    b.HasKey("order_item_id");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("POS.Models.Orders", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("order_id"));

                    b.Property<DateTime?>("order_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("payment_status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("total_amount")
                        .HasColumnType("real");

                    b.Property<int?>("user_id")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("order_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("POS.Models.Payments", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("payment_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_id"));

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<int>("order_id")
                        .HasColumnType("int")
                        .HasColumnName("order_id");

                    b.Property<string>("payment_method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("transaction_date")
                        .HasColumnType("datetime2");

                    b.HasKey("payment_id");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("POS.Models.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("POS.Models.MenuItemCategory", b =>
                {
                    b.HasOne("POS.Models.CategoryMdl", "Category")
                        .WithMany("MenuItemCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("POS.Models.MenuItems", "MenuItem")
                        .WithMany("MenuItemCategories")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("POS.Models.MenuItems", b =>
                {
                    b.HasOne("POS.Models.CategoryMdl", "Category")
                        .WithMany()
                        .HasForeignKey("category_id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("POS.Models.CategoryMdl", b =>
                {
                    b.Navigation("MenuItemCategories");
                });

            modelBuilder.Entity("POS.Models.MenuItems", b =>
                {
                    b.Navigation("MenuItemCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
